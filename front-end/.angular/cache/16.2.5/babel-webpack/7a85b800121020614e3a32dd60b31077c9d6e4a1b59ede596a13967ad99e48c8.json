{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/country-service\";\nimport * as i2 from \"@angular/common\";\nfunction ShowCountriesComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\")(2, \"a\", 2)(3, \"h1\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const country_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"/country/\", country_r1.id, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", country_r1.name, \" \");\n  }\n}\nexport class ShowCountriesComponent {\n  constructor(countryService) {\n    this.countryService = countryService;\n    this.countries = [];\n  }\n  ngOnInit() {\n    this.countryService.getCountries().subscribe(data => {\n      this.countries = data;\n    });\n  }\n  static #_ = this.ɵfac = function ShowCountriesComponent_Factory(t) {\n    return new (t || ShowCountriesComponent)(i0.ɵɵdirectiveInject(i1.CountryService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShowCountriesComponent,\n    selectors: [[\"app-show-countries\"]],\n    decls: 6,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"href\", \"/country/create-country\"], [3, \"href\"]],\n    template: function ShowCountriesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \" List of Countries \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, ShowCountriesComponent_ng_container_2_Template, 6, 2, \"ng-container\", 0);\n        i0.ɵɵelementStart(3, \"div\")(4, \"a\", 1);\n        i0.ɵɵtext(5, \"Add Country \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵelementContainerEnd","ɵɵadvance","ɵɵpropertyInterpolate1","country_r1","id","ɵɵsanitizeUrl","ɵɵtextInterpolate1","name","ShowCountriesComponent","constructor","countryService","countries","ngOnInit","getCountries","subscribe","data","_","ɵɵdirectiveInject","i1","CountryService","_2","selectors","decls","vars","consts","template","ShowCountriesComponent_Template","rf","ctx","ɵɵtemplate","ShowCountriesComponent_ng_container_2_Template","ɵɵproperty"],"sources":["C:\\Users\\boxro\\OneDrive - Mapúa University\\Year 3\\IT192\\Module 3\\Outputs\\Project\\front-end\\src\\app\\show-countries\\show-countries.component.ts","C:\\Users\\boxro\\OneDrive - Mapúa University\\Year 3\\IT192\\Module 3\\Outputs\\Project\\front-end\\src\\app\\show-countries\\show-countries.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Country } from '../model/country';\nimport { CountryService } from '../service/country-service';\n\n@Component({\n  selector: 'app-show-countries',\n  templateUrl: './show-countries.component.html',\n  styleUrls: ['./show-countries.component.css']\n})\nexport class ShowCountriesComponent implements OnInit{\n  \n  countries: Country[] = []\n  \n  constructor(private countryService: CountryService) {}\n  \n  \n  ngOnInit(): void {\n    this.countryService.getCountries().subscribe((data: Country[]) => {this.countries = data});\n  }\n\n\n\n}\n","<h2> List of Countries </h2>\n\n<ng-container *ngFor = \"let country of countries\">\n<div>\n    <a href = \"/country/{{country.id}}\"> <h1> {{country.name}} </h1></a>\n</div><br>\n</ng-container>\n\n<div>\n<a href = \"/country/create-country\">Add Country </a>\n</div>\n"],"mappings":";;;;;ICEAA,EAAA,CAAAC,uBAAA,GAAkD;IAClDD,EAAA,CAAAE,cAAA,UAAK;IACyCF,EAAA,CAAAG,MAAA,GAAiB;IAAAH,EAAA,CAAAI,YAAA,EAAK;IAC9DJ,EAAA,CAAAK,SAAA,SAAI;IACVL,EAAA,CAAAM,qBAAA,EAAe;;;;IAFRN,EAAA,CAAAO,SAAA,GAAgC;IAAhCP,EAAA,CAAAQ,sBAAA,sBAAAC,UAAA,CAAAC,EAAA,MAAAV,EAAA,CAAAW,aAAA,CAAgC;IAAOX,EAAA,CAAAO,SAAA,GAAiB;IAAjBP,EAAA,CAAAY,kBAAA,MAAAH,UAAA,CAAAI,IAAA,MAAiB;;;ADK/D,OAAM,MAAOC,sBAAsB;EAIjCC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAFlC,KAAAC,SAAS,GAAc,EAAE;EAE4B;EAGrDC,QAAQA,CAAA;IACN,IAAI,CAACF,cAAc,CAACG,YAAY,EAAE,CAACC,SAAS,CAAEC,IAAe,IAAI;MAAE,IAAI,CAACJ,SAAS,GAAGI,IAAI;IAAA,CAAC,CAAC;EAC5F;EAAC,QAAAC,CAAA,G;qBATUR,sBAAsB,EAAAd,EAAA,CAAAuB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtBZ,sBAAsB;IAAAa,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTnCjC,EAAA,CAAAE,cAAA,SAAI;QAACF,EAAA,CAAAG,MAAA,0BAAkB;QAAAH,EAAA,CAAAI,YAAA,EAAK;QAE5BJ,EAAA,CAAAmC,UAAA,IAAAC,8CAAA,0BAIe;QAEfpC,EAAA,CAAAE,cAAA,UAAK;QAC+BF,EAAA,CAAAG,MAAA,mBAAY;QAAAH,EAAA,CAAAI,YAAA,EAAI;;;QAPhBJ,EAAA,CAAAO,SAAA,GAAY;QAAZP,EAAA,CAAAqC,UAAA,YAAAH,GAAA,CAAAjB,SAAA,CAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}