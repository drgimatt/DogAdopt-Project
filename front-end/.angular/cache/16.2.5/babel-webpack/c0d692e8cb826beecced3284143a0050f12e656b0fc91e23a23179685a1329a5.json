{"ast":null,"code":"import { Country } from '../model/country';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/country-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class ShowCountryComponent {\n  constructor(countryService, route, router, fb) {\n    this.countryService = countryService;\n    this.route = route;\n    this.router = router;\n    this.fb = fb;\n    this.country = new Country();\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['id'] !== undefined) {\n        const id = +params['id'];\n        this.countryID = id;\n        this.countryService.getCountry(id).subscribe(data => {\n          this.country = data;\n          this.initializeForm();\n        });\n      }\n    });\n  }\n  initializeForm() {\n    this.countryForm = this.fb.group({\n      id: this.country.id,\n      name: this.country.name,\n      language: this.country.language\n    });\n  }\n  onSubmit() {\n    if (this.countryForm.valid) {\n      const updatedCountry = this.countryForm.value;\n      this.countryService.updateCountry(this.countryID, updatedCountry).subscribe(response => {\n        console.log('Country updated successfully:', response);\n        this.router.navigate(['/countries']);\n      }, error => {\n        console.error('Error updating country:', error);\n      });\n    }\n  }\n  executeDeleteFunction() {\n    this.countryService.deleteCountry(this.countryID).subscribe(data => {\n      console.log('Country deleted successfully:', data);\n      this.router.navigate(['/countries']);\n    });\n  }\n  static #_ = this.ɵfac = function ShowCountryComponent_Factory(t) {\n    return new (t || ShowCountryComponent)(i0.ɵɵdirectiveInject(i1.CountryService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShowCountryComponent,\n    selectors: [[\"app-show-country\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"number\", \"name\", \"id\", \"formControlName\", \"id\"], [\"type\", \"text\", \"name\", \"name\", \"formControlName\", \"name\"], [\"type\", \"text\", \"name\", \"language\", \"formControlName\", \"language\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"click\"]],\n    template: function ShowCountryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \" Country \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ShowCountryComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(3, \" Country id: \");\n        i0.ɵɵelement(4, \"input\", 1)(5, \"br\");\n        i0.ɵɵtext(6, \" Country name: \");\n        i0.ɵɵelement(7, \"input\", 2)(8, \"br\");\n        i0.ɵɵtext(9, \" Country language: \");\n        i0.ɵɵelement(10, \"input\", 3)(11, \"br\")(12, \"br\");\n        i0.ɵɵelementStart(13, \"button\", 4);\n        i0.ɵɵtext(14, \"Update Country\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\")(16, \"br\");\n        i0.ɵɵelementStart(17, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function ShowCountryComponent_Template_button_click_17_listener() {\n          return ctx.executeDeleteFunction();\n        });\n        i0.ɵɵtext(18, \"Remove Country\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.countryForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"disabled\", ctx.countryForm.invalid);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Country","ShowCountryComponent","constructor","countryService","route","router","fb","country","ngOnInit","params","subscribe","undefined","id","countryID","getCountry","data","initializeForm","countryForm","group","name","language","onSubmit","valid","updatedCountry","value","updateCountry","response","console","log","navigate","error","executeDeleteFunction","deleteCountry","_","i0","ɵɵdirectiveInject","i1","CountryService","i2","ActivatedRoute","Router","i3","FormBuilder","_2","selectors","decls","vars","consts","template","ShowCountryComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ShowCountryComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ShowCountryComponent_Template_button_click_17_listener","ɵɵadvance","ɵɵproperty","invalid"],"sources":["C:\\Users\\boxro\\OneDrive - Mapúa University\\Year 3\\IT192\\Module 3\\Outputs\\Project\\front-end\\src\\app\\show-country\\show-country.component.ts","C:\\Users\\boxro\\OneDrive - Mapúa University\\Year 3\\IT192\\Module 3\\Outputs\\Project\\front-end\\src\\app\\show-country\\show-country.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Country } from '../model/country';\nimport { CountryService } from '../service/country-service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-show-country',\n  templateUrl: './show-country.component.html',\n  styleUrls: ['./show-country.component.css']\n})\nexport class ShowCountryComponent implements OnInit {\n  countryForm: FormGroup;\n  country: Country = new Country();\n  countryID: number;\n\n  constructor(\n    private countryService: CountryService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      if (params['id'] !== undefined) {\n        const id = +params['id'];\n        this.countryID = id;\n        this.countryService.getCountry(id).subscribe(data => {\n          this.country = data;\n          this.initializeForm();\n        });\n      }\n    });\n  }\n\n  initializeForm(): void {\n    this.countryForm = this.fb.group({\n      id: this.country.id,\n      name: this.country.name,\n      language: this.country.language\n    });\n  }\n\n  onSubmit(): void {\n    if (this.countryForm.valid) {\n      const updatedCountry = this.countryForm.value;\n      this.countryService.updateCountry(this.countryID, updatedCountry).subscribe(\n        (response) => {\n          console.log('Country updated successfully:', response);\n          this.router.navigate(['/countries']);\n        },\n        (error) => {\n          console.error('Error updating country:', error);\n        }\n      );\n    }\n  }\n\n  executeDeleteFunction(): void {\n    this.countryService.deleteCountry(this.countryID).subscribe(data => {\n      console.log('Country deleted successfully:', data);\n      this.router.navigate(['/countries']);\n    });\n  }\n}\n","<h1> Country </h1>\n\n<form [formGroup]=\"countryForm\" (ngSubmit)=\"onSubmit()\">\n    Country id: <input type=\"number\" name=\"id\" formControlName=\"id\"> <br>\n    Country name: <input type=\"text\" name=\"name\" formControlName=\"name\"> <br>\n    Country language: <input type=\"text\" name=\"language\" formControlName=\"language\"> <br><br>\n\n    <button type=\"submit\" [disabled]=\"countryForm.invalid\">Update Country</button><br><br>\n    <button (click)=\"executeDeleteFunction()\">Remove Country</button> \n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}