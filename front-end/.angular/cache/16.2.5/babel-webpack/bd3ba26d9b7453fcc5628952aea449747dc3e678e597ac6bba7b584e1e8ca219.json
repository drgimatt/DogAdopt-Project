{"ast":null,"code":"import { Country } from '../model/country';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/country-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class ShowCountryComponent {\n  constructor(countryService, route, router, fb) {\n    this.countryService = countryService;\n    this.route = route;\n    this.router = router;\n    this.fb = fb;\n    this.country = new Country();\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam !== null) {\n      this.countryID = parseInt(idParam);\n    } else {\n      this.countryID = -1;\n    }\n    this.countryForm = this.fb.group({\n      id: '',\n      name: '',\n      language: ''\n    });\n  }\n  onSubmit() {\n    if (this.countryForm.valid) {\n      const Counts = this.countryForm.value;\n      this.countryService.updateCountry(this.countryID, Counts).subscribe(response => {\n        // Handle successful response\n        console.log('Country created successfully:', response);\n        //this.updateForm.reset(); // Reset the form\n        //this.router.navigate(['/countries']);\n      }, error => {\n        // Handle error\n        console.error('Error creating country:', error);\n      });\n    }\n  }\n  ngOnInit() {\n    this.route.params.forEach(params => {\n      if (params['id'] !== undefined) {\n        const id = params['id'];\n        this.countryService.getCountry(id).subscribe(data => {\n          this.country = data;\n        });\n      }\n    });\n  }\n  executeDeleteFunction() {\n    this.route.params.forEach(params => {\n      if (params['id'] !== undefined) {\n        const id = params['id'];\n        this.countryService.deleteCountry(id).subscribe(data => {\n          this.country = data;\n        });\n        this.router.navigate(['/countries']);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ShowCountryComponent_Factory(t) {\n    return new (t || ShowCountryComponent)(i0.ɵɵdirectiveInject(i1.CountryService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShowCountryComponent,\n    selectors: [[\"app-show-country\"]],\n    decls: 19,\n    vars: 8,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"number\", \"name\", \"id\", \"formControlName\", \"id\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"name\", \"formControlName\", \"name\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"language\", \"formControlName\", \"language\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"click\"]],\n    template: function ShowCountryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \" Country \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ShowCountryComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(3, \" Country id: \");\n        i0.ɵɵelementStart(4, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function ShowCountryComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.countryID = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵtext(6, \" Country name: \");\n        i0.ɵɵelementStart(7, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function ShowCountryComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.countryName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵtext(9, \" Country language: \");\n        i0.ɵɵelementStart(10, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ShowCountryComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.countryLanguage = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"br\")(12, \"br\");\n        i0.ɵɵelementStart(13, \"button\", 4);\n        i0.ɵɵtext(14, \"Update Country\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\")(16, \"br\");\n        i0.ɵɵelementStart(17, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function ShowCountryComponent_Template_button_click_17_listener() {\n          return ctx.executeDeleteFunction();\n        });\n        i0.ɵɵtext(18, \"Remove Country\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.countryForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.country.id);\n        i0.ɵɵproperty(\"ngModel\", ctx.countryID);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.country.name);\n        i0.ɵɵproperty(\"ngModel\", ctx.countryName);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.country.language);\n        i0.ɵɵproperty(\"ngModel\", ctx.countryLanguage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.countryForm.invalid);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Country","ShowCountryComponent","constructor","countryService","route","router","fb","country","idParam","snapshot","paramMap","get","countryID","parseInt","countryForm","group","id","name","language","onSubmit","valid","Counts","value","updateCountry","subscribe","response","console","log","error","ngOnInit","params","forEach","undefined","getCountry","data","executeDeleteFunction","deleteCountry","navigate","_","i0","ɵɵdirectiveInject","i1","CountryService","i2","ActivatedRoute","Router","i3","FormBuilder","_2","selectors","decls","vars","consts","template","ShowCountryComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ShowCountryComponent_Template_form_ngSubmit_2_listener","ShowCountryComponent_Template_input_ngModelChange_4_listener","$event","ɵɵelement","ShowCountryComponent_Template_input_ngModelChange_7_listener","countryName","ShowCountryComponent_Template_input_ngModelChange_10_listener","countryLanguage","ShowCountryComponent_Template_button_click_17_listener","ɵɵadvance","ɵɵproperty","ɵɵpropertyInterpolate","invalid"],"sources":["C:\\Users\\boxro\\OneDrive - Mapúa University\\Year 3\\IT192\\Module 3\\Outputs\\Project\\front-end\\src\\app\\show-country\\show-country.component.ts","C:\\Users\\boxro\\OneDrive - Mapúa University\\Year 3\\IT192\\Module 3\\Outputs\\Project\\front-end\\src\\app\\show-country\\show-country.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Country } from '../model/country';\nimport { CountryService } from '../service/country-service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-show-country',\n  templateUrl: './show-country.component.html',\n  styleUrls: ['./show-country.component.css']\n})\nexport class ShowCountryComponent implements OnInit {\n\n  countryForm: FormGroup;\n  country: Country = new Country()\n  countryID: number;\n\n  constructor(private countryService: CountryService, private route: ActivatedRoute, private router: Router, private fb: FormBuilder) {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam !== null) {\n      this.countryID = parseInt(idParam);\n    } else {\n      this.countryID = -1;\n    }  \n\n    this.countryForm = this.fb.group({\n      id: '',\n      name: '',\n      language: ''\n    });\n  }\n\n  onSubmit() {\n\n    \n    if (this.countryForm.valid) {\n      const Counts = this.countryForm.value;\n      \n      this.countryService.updateCountry(this.countryID, Counts ).subscribe(\n        (response) => {\n          // Handle successful response\n          console.log('Country created successfully:', response);\n          //this.updateForm.reset(); // Reset the form\n          //this.router.navigate(['/countries']);\n        },\n        (error) => {\n          // Handle error\n          console.error('Error creating country:', error);\n        }\n      );\n    }\n  }  \n\n  ngOnInit(): void {\n    this.route.params.forEach((params: Params) => {\n      if (params['id'] !== undefined) {\n        const id = params['id'];\n        this.countryService.getCountry(id).subscribe(data => { this.country = data });\n      }\n    });\n  }\n\n  executeDeleteFunction(): void {\n    this.route.params.forEach((params: Params) => {\n      if (params['id'] !== undefined) {\n        const id = params['id'];\n        this.countryService.deleteCountry(id).subscribe(data => { this.country = data });\n        this.router.navigate(['/countries']);\n      }\n\n    });\n  }\n\n\n  }\n\n\n\n\n\n","<h1> Country </h1>\n\n<form [formGroup]=\"countryForm\" (ngSubmit)=\"onSubmit()\">\n    Country id: <input type=\"number\"  name=\"id\" formControlName=\"id\" [(ngModel)]=\"countryID\" value = \"{{country.id}}\"> <br>\n    Country name: <input type=\"text\" name=\"name\" formControlName=\"name\" [(ngModel)]=\"countryName\" value = \"{{country.name}}\"> <br>\n    Country language: <input type=\"text\" name=\"language\" formControlName=\"language\" [(ngModel)]=\"countryLanguage\" value = \"{{country.language}}\"> <br><br>\n\n    <button type=\"submit\" [disabled]=\"countryForm.invalid\">Update Country</button><br><br>\n    <button (click)=\"executeDeleteFunction()\">Remove Country</button> \n\n    \n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}