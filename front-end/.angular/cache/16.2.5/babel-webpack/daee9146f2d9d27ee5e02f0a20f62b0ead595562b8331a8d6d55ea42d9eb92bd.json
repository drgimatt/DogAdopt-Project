{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/country-service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nexport class CreateCountryComponent {\n  constructor(countryService, fb, router) {\n    this.countryService = countryService;\n    this.fb = fb;\n    this.router = router;\n    this.countryForm = this.fb.group({\n      name: '',\n      language: ''\n    });\n  }\n  onSubmit() {\n    if (this.countryForm.valid) {\n      const Country = this.countryForm.value;\n      this.countryService.createCountry(Country).subscribe(response => {\n        // Handle successful response\n        console.log('Country created successfully:', response);\n        this.countryForm.reset(); // Reset the form\n        this.router.navigate(['/countries']);\n      }, error => {\n        // Handle error\n        console.error('Error creating country:', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function CreateCountryComponent_Factory(t) {\n    return new (t || CreateCountryComponent)(i0.ɵɵdirectiveInject(i1.CountryService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateCountryComponent,\n    selectors: [[\"app-create-country\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"language\"], [\"type\", \"text\", \"id\", \"language\", \"formControlName\", \"language\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function CreateCountryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \" Add Country \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateCountryComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Name: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Language: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵtext(12, \"Create Country\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.countryForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"disabled\", ctx.countryForm.invalid);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CreateCountryComponent","constructor","countryService","fb","router","countryForm","group","name","language","onSubmit","valid","Country","value","createCountry","subscribe","response","console","log","reset","navigate","error","_","i0","ɵɵdirectiveInject","i1","CountryService","i2","FormBuilder","i3","Router","_2","selectors","decls","vars","consts","template","CreateCountryComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CreateCountryComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","invalid"],"sources":["C:\\Users\\boxro\\OneDrive - Mapúa University\\Year 3\\IT192\\Module 3\\Outputs\\Project\\front-end\\src\\app\\create-country\\create-country.component.ts","C:\\Users\\boxro\\OneDrive - Mapúa University\\Year 3\\IT192\\Module 3\\Outputs\\Project\\front-end\\src\\app\\create-country\\create-country.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CountryService } from '../service/country-service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-country',\n  templateUrl: './create-country.component.html',\n  styleUrls: ['./create-country.component.css']\n})\nexport class CreateCountryComponent {\n\n  countryForm: FormGroup;\n\n  constructor(private countryService: CountryService, private fb: FormBuilder, private router: Router) {\n    this.countryForm = this.fb.group({\n      name: '',\n      language: ''\n    });\n  }\n\n\n  onSubmit() {\n    if (this.countryForm.valid) {\n      const Country = this.countryForm.value;\n      this.countryService.createCountry(Country).subscribe(\n        (response) => {\n          // Handle successful response\n          console.log('Country created successfully:', response);\n          this.countryForm.reset(); // Reset the form\n          this.router.navigate(['/countries']);\n        },\n        (error) => {\n          // Handle error\n          console.error('Error creating country:', error);\n        }\n      );\n    }\n  }\n\n}\n","<h2> Add Country </h2>\n\n<form [formGroup]=\"countryForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name: </label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"language\">Language: </label>\n      <input type=\"text\" id=\"language\" formControlName=\"language\" />\n    </div>\n    <!-- Add more form fields as needed -->\n    <button type=\"submit\" [disabled]=\"countryForm.invalid\">Create Country</button>\n  </form>"],"mappings":";;;;AAUA,OAAM,MAAOA,sBAAsB;EAIjCC,YAAoBC,cAA8B,EAAUC,EAAe,EAAUC,MAAc;IAA/E,KAAAF,cAAc,GAAdA,cAAc;IAA0B,KAAAC,EAAE,GAAFA,EAAE;IAAuB,KAAAC,MAAM,GAANA,MAAM;IACzF,IAAI,CAACC,WAAW,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC/BC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE;KACX,CAAC;EACJ;EAGAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACJ,WAAW,CAACK,KAAK,EAAE;MAC1B,MAAMC,OAAO,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK;MACtC,IAAI,CAACV,cAAc,CAACW,aAAa,CAACF,OAAO,CAAC,CAACG,SAAS,CACjDC,QAAQ,IAAI;QACX;QACAC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,QAAQ,CAAC;QACtD,IAAI,CAACV,WAAW,CAACa,KAAK,EAAE,CAAC,CAAC;QAC1B,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACtC,CAAC,EACAC,KAAK,IAAI;QACR;QACAJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CACF;;EAEL;EAAC,QAAAC,CAAA,G;qBA5BUrB,sBAAsB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtB9B,sBAAsB;IAAA+B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVnCf,EAAA,CAAAiB,cAAA,SAAI;QAACjB,EAAA,CAAAkB,MAAA,oBAAY;QAAAlB,EAAA,CAAAmB,YAAA,EAAK;QAEtBnB,EAAA,CAAAiB,cAAA,cAAwD;QAAxBjB,EAAA,CAAAoB,UAAA,sBAAAC,yDAAA;UAAA,OAAYL,GAAA,CAAA7B,QAAA,EAAU;QAAA,EAAC;QACnDa,EAAA,CAAAiB,cAAA,aAAwB;QACJjB,EAAA,CAAAkB,MAAA,aAAM;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAChCnB,EAAA,CAAAsB,SAAA,eAAsD;QACxDtB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAiB,cAAA,aAAwB;QACAjB,EAAA,CAAAkB,MAAA,iBAAU;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QACxCnB,EAAA,CAAAsB,SAAA,gBAA8D;QAChEtB,EAAA,CAAAmB,YAAA,EAAM;QAENnB,EAAA,CAAAiB,cAAA,iBAAuD;QAAAjB,EAAA,CAAAkB,MAAA,sBAAc;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;;;QAV5EnB,EAAA,CAAAuB,SAAA,GAAyB;QAAzBvB,EAAA,CAAAwB,UAAA,cAAAR,GAAA,CAAAjC,WAAA,CAAyB;QAULiB,EAAA,CAAAuB,SAAA,GAAgC;QAAhCvB,EAAA,CAAAwB,UAAA,aAAAR,GAAA,CAAAjC,WAAA,CAAA0C,OAAA,CAAgC"},"metadata":{},"sourceType":"module","externalDependencies":[]}