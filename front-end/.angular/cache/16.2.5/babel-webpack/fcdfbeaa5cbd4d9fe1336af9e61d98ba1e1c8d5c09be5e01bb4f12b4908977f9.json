{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CountryService {\n  constructor(http) {\n    this.http = http;\n    this.countriesURL = '';\n    this.countriesURL = 'http://localhost:18080/api/'; // base url, specifics is defined in each method\n  }\n  // returns a specific response that would be called using the URL defined in the controller\n  getCountries() {\n    return this.http.get(this.countriesURL + 'countries');\n  }\n  getCountry(id) {\n    return this.http.get(this.countriesURL + 'show-country/' + id.toString());\n  }\n  static #_ = this.ɵfac = function CountryService_Factory(t) {\n    return new (t || CountryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CountryService,\n    factory: CountryService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CountryService","constructor","http","countriesURL","getCountries","get","getCountry","id","toString","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\boxro\\OneDrive - Mapúa University\\Year 3\\IT192\\Module 3\\Outputs\\Project\\front-end\\src\\app\\service\\country-service.ts"],"sourcesContent":["import {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Country } from '../model/country';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable ({providedIn: 'root'})\nexport class CountryService { //must call mappings found from the mycontroller - backend\n    countriesURL : string = ''\n    constructor(private http: HttpClient) {\n        this.countriesURL = 'http://localhost:18080/api/' // base url, specifics is defined in each method\n    }\n// returns a specific response that would be called using the URL defined in the controller\n    public getCountries() : Observable<Country[]> {\n        return this.http.get<Country[]> (this.countriesURL + 'countries');\n    }\n\n    public getCountry(id : number) : Observable<Country> {\n        return this.http.get<Country> (this.countriesURL + 'show-country/' + id.toString());\n    }    \n}\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAEvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,YAAY,GAAY,EAAE;IAEtB,IAAI,CAACA,YAAY,GAAG,6BAA6B,EAAC;EACtD;EACJ;EACWC,YAAYA,CAAA;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,YAAY,GAAG,WAAW,CAAC;EACrE;EAEOG,UAAUA,CAACC,EAAW;IACzB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAW,IAAI,CAACF,YAAY,GAAG,eAAe,GAAGI,EAAE,CAACC,QAAQ,EAAE,CAAC;EACvF;EAAC,QAAAC,CAAA,G;qBAZQT,cAAc,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdd,cAAc;IAAAe,OAAA,EAAdf,cAAc,CAAAgB,IAAA;IAAAC,UAAA,EADD;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}