{"ast":null,"code":"import { Country } from '../model/country';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/country-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class ShowCountryComponent {\n  constructor(countryService, route) {\n    this.countryService = countryService;\n    this.route = route;\n    this.country = new Country();\n  }\n  ngOnInit() {\n    this.route.params.forEach(params => {\n      if (params['id'] !== undefined) {\n        const id = params['id'];\n        this.countryService.getCountry(id).subscribe(data => {\n          this.country = data;\n        });\n      }\n    });\n    //this.countryService.getCountry().subscribe((data: Country) => {this.country = data});\n  }\n  static #_ = this.ɵfac = function ShowCountryComponent_Factory(t) {\n    return new (t || ShowCountryComponent)(i0.ɵɵdirectiveInject(i1.CountryService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShowCountryComponent,\n    selectors: [[\"app-show-country\"]],\n    decls: 14,\n    vars: 4,\n    consts: [[\"type\", \"text\", \"name\", \"id\", \"disabled\", \"\", 3, \"value\"], [\"type\", \"text\", \"name\", \"name\", 3, \"value\"], [\"type\", \"text\", \"name\", \"language\", 3, \"value\"], [\"type\", \"button\", 3, \"formaction\"]],\n    template: function ShowCountryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \" Country \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\");\n        i0.ɵɵtext(3, \" Country id: \");\n        i0.ɵɵelement(4, \"input\", 0)(5, \"br\");\n        i0.ɵɵtext(6, \" Country name: \");\n        i0.ɵɵelement(7, \"input\", 1)(8, \"br\");\n        i0.ɵɵtext(9, \" Country language: \");\n        i0.ɵɵelement(10, \"input\", 2)(11, \"br\");\n        i0.ɵɵelementStart(12, \"button\", 3);\n        i0.ɵɵtext(13, \"Delete Country\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.country.id);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.country.name);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.country.language);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate1(\"formaction\", \"/country/delete-country/\", ctx.country.id, \"\", i0.ɵɵsanitizeUrl);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Country","ShowCountryComponent","constructor","countryService","route","country","ngOnInit","params","forEach","undefined","id","getCountry","subscribe","data","_","i0","ɵɵdirectiveInject","i1","CountryService","i2","ActivatedRoute","_2","selectors","decls","vars","consts","template","ShowCountryComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵpropertyInterpolate","name","language","ɵɵpropertyInterpolate1","ɵɵsanitizeUrl"],"sources":["C:\\Users\\boxro\\OneDrive - Mapúa University\\Year 3\\IT192\\Module 3\\Outputs\\Project\\front-end\\src\\app\\show-country\\show-country.component.ts","C:\\Users\\boxro\\OneDrive - Mapúa University\\Year 3\\IT192\\Module 3\\Outputs\\Project\\front-end\\src\\app\\show-country\\show-country.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Country } from '../model/country';\nimport { CountryService } from '../service/country-service';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-show-country',\n  templateUrl: './show-country.component.html',\n  styleUrls: ['./show-country.component.css']\n})\nexport class ShowCountryComponent implements OnInit{\n\n  \n  country: Country = new Country()\n  \n  constructor(private countryService: CountryService, private route:ActivatedRoute) {}\n  \n  \n  ngOnInit(): void {\n    this.route.params.forEach((params : Params) => {\n      if(params ['id'] !== undefined){\n        const id = params ['id'];\n        this.countryService.getCountry(id).subscribe(data => {this.country = data});\n      }\n    });\n    //this.countryService.getCountry().subscribe((data: Country) => {this.country = data});\n  }\n\n}\n","<h1> Country </h1>\n\n<form>\n    Country id: <input type=\"text\" name=\"id\" disabled value = \"{{country.id}}\"> <br>\n    Country name: <input type=\"text\" name=\"name\" value = \"{{country.name}}\"> <br>\n    Country language: <input type=\"text\" name=\"language\" value = \"{{country.language}}\"> <br>\n<button type=\"button\" formaction=\"/country/delete-country/{{country.id}}\">Delete Country</button>\n</form>"],"mappings":"AACA,SAASA,OAAO,QAAQ,kBAAkB;;;;;AAS1C,OAAM,MAAOC,oBAAoB;EAK/BC,YAAoBC,cAA8B,EAAUC,KAAoB;IAA5D,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,KAAK,GAALA,KAAK;IAFjE,KAAAC,OAAO,GAAY,IAAIL,OAAO,EAAE;EAEmD;EAGnFM,QAAQA,CAAA;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,OAAO,CAAED,MAAe,IAAI;MAC5C,IAAGA,MAAM,CAAE,IAAI,CAAC,KAAKE,SAAS,EAAC;QAC7B,MAAMC,EAAE,GAAGH,MAAM,CAAE,IAAI,CAAC;QACxB,IAAI,CAACJ,cAAc,CAACQ,UAAU,CAACD,EAAE,CAAC,CAACE,SAAS,CAACC,IAAI,IAAG;UAAE,IAAI,CAACR,OAAO,GAAGQ,IAAI;QAAA,CAAC,CAAC;;IAE/E,CAAC,CAAC;IACF;EACF;EAAC,QAAAC,CAAA,G;qBAhBUb,oBAAoB,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAApBpB,oBAAoB;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVjCb,EAAA,CAAAe,cAAA,SAAI;QAACf,EAAA,CAAAgB,MAAA,gBAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAElBjB,EAAA,CAAAe,cAAA,WAAM;QACFf,EAAA,CAAAgB,MAAA,oBAAY;QAAAhB,EAAA,CAAAkB,SAAA,eAA+D;QAC3ElB,EAAA,CAAAgB,MAAA,sBAAc;QAAAhB,EAAA,CAAAkB,SAAA,eAA0D;QACxElB,EAAA,CAAAgB,MAAA,0BAAkB;QAAAhB,EAAA,CAAAkB,SAAA,gBAAkE;QACxFlB,EAAA,CAAAe,cAAA,iBAA0E;QAAAf,EAAA,CAAAgB,MAAA,sBAAc;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QAH3CjB,EAAA,CAAAmB,SAAA,GAAwB;QAAxBnB,EAAA,CAAAoB,qBAAA,UAAAN,GAAA,CAAAxB,OAAA,CAAAK,EAAA,CAAwB;QAC7BK,EAAA,CAAAmB,SAAA,GAA0B;QAA1BnB,EAAA,CAAAoB,qBAAA,UAAAN,GAAA,CAAAxB,OAAA,CAAA+B,IAAA,CAA0B;QAClBrB,EAAA,CAAAmB,SAAA,GAA8B;QAA9BnB,EAAA,CAAAoB,qBAAA,UAAAN,GAAA,CAAAxB,OAAA,CAAAgC,QAAA,CAA8B;QACjEtB,EAAA,CAAAmB,SAAA,GAAmD;QAAnDnB,EAAA,CAAAuB,sBAAA,2CAAAT,GAAA,CAAAxB,OAAA,CAAAK,EAAA,MAAAK,EAAA,CAAAwB,aAAA,CAAmD"},"metadata":{},"sourceType":"module","externalDependencies":[]}