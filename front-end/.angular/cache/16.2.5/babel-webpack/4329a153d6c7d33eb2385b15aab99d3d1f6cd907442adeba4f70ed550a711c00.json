{"ast":null,"code":"import { Country } from '../model/country';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/country-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class ShowCountryComponent {\n  constructor(countryService, route, router, fb) {\n    this.countryService = countryService;\n    this.route = route;\n    this.router = router;\n    this.fb = fb;\n    this.country = new Country();\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam !== null) {\n      this.countryID = +idParam;\n    } else {\n      this.countryID = -1;\n    }\n    this.updateForm = this.fb.group({\n      id: '',\n      name: '',\n      language: ''\n    });\n  }\n  onSubmit() {\n    if (this.updateForm.valid) {\n      const Country = this.updateForm.value;\n      this.countryService.updateCountry(this.countryID, Country).subscribe(response => {\n        // Handle successful response\n        console.log('Country created successfully:', response);\n        this.updateForm.reset(); // Reset the form\n        this.router.navigate(['/countries']);\n      }, error => {\n        // Handle error\n        console.error('Error creating country:', error);\n      });\n    }\n  }\n  ngOnInit() {\n    this.route.params.forEach(params => {\n      if (params['id'] !== undefined) {\n        const id = params['id'];\n        this.countryService.getCountry(id).subscribe(data => {\n          this.country = data;\n        });\n      }\n    });\n  }\n  executeDeleteFunction() {\n    this.route.params.forEach(params => {\n      if (params['id'] !== undefined) {\n        const id = params['id'];\n        this.countryService.deleteCountry(id).subscribe(data => {\n          this.country = data;\n        });\n        this.router.navigate(['/countries']);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ShowCountryComponent_Factory(t) {\n    return new (t || ShowCountryComponent)(i0.ɵɵdirectiveInject(i1.CountryService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShowCountryComponent,\n    selectors: [[\"app-show-country\"]],\n    decls: 19,\n    vars: 5,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"number\", \"name\", \"id\", \"formControlName\", \"id\", 3, \"value\"], [\"type\", \"text\", \"name\", \"name\", \"formControlName\", \"name\", 3, \"value\"], [\"type\", \"text\", \"name\", \"language\", \"formControlName\", \"language\", 3, \"value\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"click\"]],\n    template: function ShowCountryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \" Country \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ShowCountryComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(3, \" Country id: \");\n        i0.ɵɵelement(4, \"input\", 1)(5, \"br\");\n        i0.ɵɵtext(6, \" Country name: \");\n        i0.ɵɵelement(7, \"input\", 2)(8, \"br\");\n        i0.ɵɵtext(9, \" Country language: \");\n        i0.ɵɵelement(10, \"input\", 3)(11, \"br\")(12, \"br\");\n        i0.ɵɵelementStart(13, \"button\", 4);\n        i0.ɵɵtext(14, \"Update Country\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\")(16, \"br\");\n        i0.ɵɵelementStart(17, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function ShowCountryComponent_Template_button_click_17_listener() {\n          return ctx.executeDeleteFunction();\n        });\n        i0.ɵɵtext(18, \"Remove Country\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.updateForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.country.id);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.country.name);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.country.language);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.updateForm.invalid);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Country","ShowCountryComponent","constructor","countryService","route","router","fb","country","idParam","snapshot","paramMap","get","countryID","updateForm","group","id","name","language","onSubmit","valid","value","updateCountry","subscribe","response","console","log","reset","navigate","error","ngOnInit","params","forEach","undefined","getCountry","data","executeDeleteFunction","deleteCountry","_","i0","ɵɵdirectiveInject","i1","CountryService","i2","ActivatedRoute","Router","i3","FormBuilder","_2","selectors","decls","vars","consts","template","ShowCountryComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ShowCountryComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ShowCountryComponent_Template_button_click_17_listener","ɵɵadvance","ɵɵproperty","ɵɵpropertyInterpolate","invalid"],"sources":["C:\\Users\\boxro\\OneDrive - Mapúa University\\Year 3\\IT192\\Module 3\\Outputs\\Project\\front-end\\src\\app\\show-country\\show-country.component.ts","C:\\Users\\boxro\\OneDrive - Mapúa University\\Year 3\\IT192\\Module 3\\Outputs\\Project\\front-end\\src\\app\\show-country\\show-country.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Country } from '../model/country';\nimport { CountryService } from '../service/country-service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-show-country',\n  templateUrl: './show-country.component.html',\n  styleUrls: ['./show-country.component.css']\n})\nexport class ShowCountryComponent implements OnInit {\n\n  updateForm: FormGroup;\n  country: Country = new Country()\n  countryID: number;\n\n  constructor(private countryService: CountryService, private route: ActivatedRoute, private router: Router, private fb: FormBuilder) {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam !== null) {\n      this.countryID = +idParam;\n    } else {\n      this.countryID = -1;\n    }  \n\n    this.updateForm = this.fb.group({\n      id: '',\n      name: '',\n      language: ''\n    });\n  }\n\n  onSubmit() {\n\n    \n    if (this.updateForm.valid) {\n      const Country = this.updateForm.value;\n      \n      this.countryService.updateCountry(this.countryID, Country ).subscribe(\n        (response) => {\n          // Handle successful response\n          console.log('Country created successfully:', response);\n          this.updateForm.reset(); // Reset the form\n          this.router.navigate(['/countries']);\n        },\n        (error) => {\n          // Handle error\n          console.error('Error creating country:', error);\n        }\n      );\n    }\n  }  \n\n  ngOnInit(): void {\n    this.route.params.forEach((params: Params) => {\n      if (params['id'] !== undefined) {\n        const id = params['id'];\n        this.countryService.getCountry(id).subscribe(data => { this.country = data });\n      }\n    });\n  }\n\n  executeDeleteFunction(): void {\n    this.route.params.forEach((params: Params) => {\n      if (params['id'] !== undefined) {\n        const id = params['id'];\n        this.countryService.deleteCountry(id).subscribe(data => { this.country = data });\n        this.router.navigate(['/countries']);\n      }\n\n    });\n  }\n\n\n  }\n\n\n\n\n\n","<h1> Country </h1>\n\n<form [formGroup]=\"updateForm\" (ngSubmit)=\"onSubmit()\">\n    Country id: <input type=\"number\"  name=\"id\" formControlName=\"id\" value = \"{{country.id}}\"> <br>\n    Country name: <input type=\"text\" name=\"name\" formControlName=\"name\" value = \"{{country.name}}\"> <br>\n    Country language: <input type=\"text\" name=\"language\" formControlName=\"language\" value = \"{{country.language}}\"> <br><br>\n\n    <button type=\"submit\" [disabled]=\"updateForm.invalid\">Update Country</button><br><br>\n    <button (click)=\"executeDeleteFunction()\">Remove Country</button> \n\n    \n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}